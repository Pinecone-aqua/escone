{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "plugin:@next/next/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "next",
    "next/core-web-vitals"
  ],
  "plugins": ["eslint-plugin-unicorn"],
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./**/tsconfig.json"
  },
  "overrides": [
    {
      "files": ["*.ts", "**/*.ts", "*.tsx", "**/*.tsx"],
      "excludedFiles": ["*.test.js"],
      "rules": {
        "import/first": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "react/self-closing-comp": [
          "error",
          { "component": true, "html": true }
        ],
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-unnecessary-condition": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/return-await": "error",
        "arrow-body-style": ["error", "as-needed"]
      }
    },
    {
      "files": ["*.jsx", "**/*.tsx", "**/**/*.tsx", "!^\\[.*]\\.tsx$"], // for JSX Component
      "excludedFiles": ["^\\[.*]\\.tsx$"],
      "rules": {
        "unicorn/prefer-module": "off",
        "unicorn/filename-case": ["error", { "case": "pascalCase" }]
      }
    },
    {
      "files": ["*.js", "*.ts"], // for other js files
      "rules": {
        "unicorn/prefer-module": "off",
        "unicorn/filename-case": ["error", { "case": "kebabCase" }]
      }
    },

    {
      "files": ["use[A-Z]*.js", "use[A-Z]*.ts"], // for React hooks
      "rules": {
        "unicorn/prefer-module": "off",
        "unicorn/filename-case": ["error", { "case": "camelCase" }]
      }
    },
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "camelcase": ["error", { "properties": "always" }]
      }
    }
  ]
}
